{"ast":null,"code":"var _jsxFileName = \"/Users/moon/clone/React-Netflix-Clone/src/pages/BrowsePage.js\";\nimport React, { useState } from \"react\";\nimport useContent from \"../custom-hooks/useContent\";\nimport HeaderWrapper from \"../components/Header/HeaderWrapper\";\nimport NavBar from \"../components/Header/NavBar\";\nimport Logo from \"../components/Header/Logo\";\nimport FeatureWrapper from \"../components/Header/FeatureWrapper\";\nimport FeatureTitle from \"../components/Header/FeatureTitle\";\nimport FeatureSubTitle from \"../components/Header/FeatureSubTitle\";\nimport PlayButton from \"../components/Header/PlayButton\";\nimport HeaderLink from \"../components/Header/HeaderLink\";\nimport AllSlidesWrapper from \"../components/Movies/AllSlidesWrapper\";\nimport SlideWrapper from \"../components/Movies/SlideWrapper\";\nimport SlideTitle from \"../components/Movies/SlideTitle\";\nimport AllCardsWrapper from \"../components/Movies/AllCardsWrapper\";\nimport CardWrapper from \"../components/Movies/CardWrapper\";\nimport CardImage from \"../components/Movies/CardImage\";\nimport CardTitle from \"../components/Movies/CardTitle\";\nimport CardDescription from \"../components/Movies/CardDescription\";\nimport CardFeatureWrapper from \"../components/Movies/CardFeatureWrapper\";\nimport CardFeatureClose from \"../components/Movies/CardFeatureClose\";\nimport PlayerVideo from \"../components/Movies/PlayerVideo\";\nimport PlayerOverlay from \"../components/Movies/PlayerOverlay\";\nimport FooterCompound from \"../compounds/FooterCompound\";\n\nfunction BrowsePage() {\n  let {\n    series\n  } = useContent(\"series\");\n  series = [{\n    title: \"Documentaries\",\n    data: series.filter(item => item.genre === \"documentaries\")\n  }, {\n    title: \"Comedies\",\n    data: series.filter(item => item.genre === \"comedies\")\n  }, {\n    title: \"Children\",\n    data: series.filter(item => item.genre === \"children\")\n  }, {\n    title: \"Crime\",\n    data: series.filter(item => item.genre === \"crime\")\n  }, {\n    title: \"Feel-Good\",\n    data: series.filter(item => item.genre === \"feel-good\")\n  }];\n  let {\n    films\n  } = useContent(\"films\");\n  films = [{\n    title: \"Drama\",\n    data: films.filter(item => item.genre === \"drama\")\n  }, {\n    title: \"Thriller\",\n    data: films.filter(item => item.genre === \"thriller\")\n  }, {\n    title: \"Children\",\n    data: films.filter(item => item.genre === \"children\")\n  }, {\n    title: \"Suspense\",\n    data: films.filter(item => item.genre === \"suspense\")\n  }, {\n    title: \"Romance\",\n    data: films.filter(item => item.genre === \"romance\")\n  }];\n  const [category, setCategory] = useState(\"films\");\n  const currentCategory = category === \"films\" ? films : series;\n  const [showCardFeature, setShowCardFeature] = useState(false);\n  const [activeItem, setActiveItem] = useState(false);\n  const [showPlayer, setShowPlayer] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderWrapper, {\n    className: \"header-wrapper-browse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    className: \"navbar-browse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HeaderLink, {\n    className: category === \"films\" ? \"header-link-bold\" : \"header-link\",\n    onClick: () => setCategory(\"films\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(HeaderLink, {\n    className: category === \"series\" ? \"header-link-bold\" : \"header-link\",\n    onClick: () => setCategory(\"series\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Series\")), /*#__PURE__*/React.createElement(FeatureWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FeatureTitle, {\n    className: \"feature-title-browse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Watch Joker Now\"), /*#__PURE__*/React.createElement(FeatureSubTitle, {\n    className: \"feature-subtitle-browse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks, the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he is part of the world around him.\"), /*#__PURE__*/React.createElement(PlayButton, {\n    onClick: () => setShowPlayer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Play\"), showPlayer ? /*#__PURE__*/React.createElement(PlayerOverlay, {\n    onClick: () => setShowPlayer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PlayerVideo, {\n    src: \"./videos/video.mp4\",\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })) : null)), /*#__PURE__*/React.createElement(AllSlidesWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, currentCategory.map(slideItem => /*#__PURE__*/React.createElement(SlideWrapper, {\n    key: `${category}-${slideItem.title.toLowerCase()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SlideTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, slideItem.title), /*#__PURE__*/React.createElement(AllCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, slideItem.data.map(cardItem => /*#__PURE__*/React.createElement(CardWrapper, {\n    key: cardItem.docId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardImage, {\n    onClick: () => {\n      setShowCardFeature(true);\n      setActiveItem(cardItem);\n    },\n    src: `../images/${category}/${cardItem.genre}/${cardItem.slug}/small.jpg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  })))), showCardFeature && slideItem.title.toLowerCase() === activeItem.genre ? /*#__PURE__*/React.createElement(CardFeatureWrapper, {\n    style: {\n      backgroundImage: `url(../images/${category}/${activeItem.genre}/${activeItem.slug}/large.jpg)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, activeItem.title), /*#__PURE__*/React.createElement(CardDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, activeItem.description), /*#__PURE__*/React.createElement(CardFeatureClose, {\n    onClick: () => setShowCardFeature(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PlayButton, {\n    onClick: () => setShowPlayer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Play\"), showPlayer ? /*#__PURE__*/React.createElement(PlayerOverlay, {\n    onClick: () => setShowPlayer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PlayerVideo, {\n    src: \"../videos/video.mp4\",\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })) : null) : null))), /*#__PURE__*/React.createElement(FooterCompound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BrowsePage;","map":{"version":3,"sources":["/Users/moon/clone/React-Netflix-Clone/src/pages/BrowsePage.js"],"names":["React","useState","useContent","HeaderWrapper","NavBar","Logo","FeatureWrapper","FeatureTitle","FeatureSubTitle","PlayButton","HeaderLink","AllSlidesWrapper","SlideWrapper","SlideTitle","AllCardsWrapper","CardWrapper","CardImage","CardTitle","CardDescription","CardFeatureWrapper","CardFeatureClose","PlayerVideo","PlayerOverlay","FooterCompound","BrowsePage","series","title","data","filter","item","genre","films","category","setCategory","currentCategory","showCardFeature","setShowCardFeature","activeItem","setActiveItem","showPlayer","setShowPlayer","map","slideItem","toLowerCase","cardItem","docId","slug","backgroundImage","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useContent from \"../custom-hooks/useContent\";\nimport HeaderWrapper from \"../components/Header/HeaderWrapper\";\nimport NavBar from \"../components/Header/NavBar\";\nimport Logo from \"../components/Header/Logo\";\nimport FeatureWrapper from \"../components/Header/FeatureWrapper\";\nimport FeatureTitle from \"../components/Header/FeatureTitle\";\nimport FeatureSubTitle from \"../components/Header/FeatureSubTitle\";\nimport PlayButton from \"../components/Header/PlayButton\";\nimport HeaderLink from \"../components/Header/HeaderLink\";\nimport AllSlidesWrapper from \"../components/Movies/AllSlidesWrapper\";\nimport SlideWrapper from \"../components/Movies/SlideWrapper\";\nimport SlideTitle from \"../components/Movies/SlideTitle\";\nimport AllCardsWrapper from \"../components/Movies/AllCardsWrapper\";\nimport CardWrapper from \"../components/Movies/CardWrapper\";\nimport CardImage from \"../components/Movies/CardImage\";\nimport CardTitle from \"../components/Movies/CardTitle\";\nimport CardDescription from \"../components/Movies/CardDescription\";\nimport CardFeatureWrapper from \"../components/Movies/CardFeatureWrapper\";\nimport CardFeatureClose from \"../components/Movies/CardFeatureClose\";\nimport PlayerVideo from \"../components/Movies/PlayerVideo\";\nimport PlayerOverlay from \"../components/Movies/PlayerOverlay\";\nimport FooterCompound from \"../compounds/FooterCompound\";\n\nfunction BrowsePage() {\n  let { series } = useContent(\"series\");\n  series = [\n    {\n      title: \"Documentaries\",\n      data: series.filter((item) => item.genre === \"documentaries\"),\n    },\n    {\n      title: \"Comedies\",\n      data: series.filter((item) => item.genre === \"comedies\"),\n    },\n    {\n      title: \"Children\",\n      data: series.filter((item) => item.genre === \"children\"),\n    },\n    { title: \"Crime\", data: series.filter((item) => item.genre === \"crime\") },\n    {\n      title: \"Feel-Good\",\n      data: series.filter((item) => item.genre === \"feel-good\"),\n    },\n  ];\n\n  let { films } = useContent(\"films\");\n  films = [\n    { title: \"Drama\", data: films.filter((item) => item.genre === \"drama\") },\n    {\n      title: \"Thriller\",\n      data: films.filter((item) => item.genre === \"thriller\"),\n    },\n    {\n      title: \"Children\",\n      data: films.filter((item) => item.genre === \"children\"),\n    },\n    {\n      title: \"Suspense\",\n      data: films.filter((item) => item.genre === \"suspense\"),\n    },\n    {\n      title: \"Romance\",\n      data: films.filter((item) => item.genre === \"romance\"),\n    },\n  ];\n\n  const [category, setCategory] = useState(\"films\");\n  const currentCategory = category === \"films\" ? films : series;\n  const [showCardFeature, setShowCardFeature] = useState(false);\n  const [activeItem, setActiveItem] = useState(false);\n  const [showPlayer, setShowPlayer] = useState(false);\n\n  return (\n    <>\n      <HeaderWrapper className=\"header-wrapper-browse\">\n        <NavBar className=\"navbar-browse\">\n          <Logo />\n          <HeaderLink\n            className={\n              category === \"films\" ? \"header-link-bold\" : \"header-link\"\n            }\n            onClick={() => setCategory(\"films\")}\n          >\n            Films\n          </HeaderLink>\n          <HeaderLink\n            className={\n              category === \"series\" ? \"header-link-bold\" : \"header-link\"\n            }\n            onClick={() => setCategory(\"series\")}\n          >\n            Series\n          </HeaderLink>\n        </NavBar>\n        <FeatureWrapper>\n          <FeatureTitle className=\"feature-title-browse\">\n            Watch Joker Now\n          </FeatureTitle>\n          <FeatureSubTitle className=\"feature-subtitle-browse\">\n            Forever alone in a crowd, failed comedian Arthur Fleck seeks\n            connection as he walks the streets of Gotham City. Arthur wears two\n            masks, the one he paints for his day job as a clown, and the guise\n            he projects in a futile attempt to feel like he is part of the world\n            around him.\n          </FeatureSubTitle>\n          <PlayButton onClick={() => setShowPlayer(true)}>Play</PlayButton>\n          {showPlayer ? (\n            <PlayerOverlay onClick={() => setShowPlayer(false)}>\n              <PlayerVideo src=\"./videos/video.mp4\" type=\"video/mp4\" />\n            </PlayerOverlay>\n          ) : null}\n        </FeatureWrapper>\n      </HeaderWrapper>\n\n      <AllSlidesWrapper>\n        {currentCategory.map((slideItem) => (\n          <SlideWrapper key={`${category}-${slideItem.title.toLowerCase()}`}>\n            <SlideTitle>{slideItem.title}</SlideTitle>\n            <AllCardsWrapper>\n              {slideItem.data.map((cardItem) => (\n                <CardWrapper key={cardItem.docId}>\n                  <CardImage\n                    onClick={() => {\n                      setShowCardFeature(true);\n                      setActiveItem(cardItem);\n                    }}\n                    src={`../images/${category}/${cardItem.genre}/${cardItem.slug}/small.jpg`}\n                  />\n                </CardWrapper>\n              ))}\n            </AllCardsWrapper>\n            {showCardFeature &&\n            slideItem.title.toLowerCase() === activeItem.genre ? (\n              <CardFeatureWrapper\n                style={{\n                  backgroundImage: `url(../images/${category}/${activeItem.genre}/${activeItem.slug}/large.jpg)`,\n                }}\n              >\n                <CardTitle>{activeItem.title}</CardTitle>\n                <CardDescription>{activeItem.description}</CardDescription>\n                <CardFeatureClose onClick={() => setShowCardFeature(false)} />\n                <PlayButton onClick={() => setShowPlayer(true)}>\n                  Play\n                </PlayButton>\n                {showPlayer ? (\n                  <PlayerOverlay onClick={() => setShowPlayer(false)}>\n                    <PlayerVideo src=\"../videos/video.mp4\" type=\"video/mp4\" />\n                  </PlayerOverlay>\n                ) : null}\n              </CardFeatureWrapper>\n            ) : null}\n          </SlideWrapper>\n        ))}\n      </AllSlidesWrapper>\n      <FooterCompound />\n    </>\n  );\n}\n\nexport default BrowsePage;\n"]},"metadata":{},"sourceType":"module"}